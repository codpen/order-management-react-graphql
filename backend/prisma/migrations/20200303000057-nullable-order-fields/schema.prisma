// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// The `datasource` block is used to specify the connection to your DB.
// Set the `provider` field to match your DB type: "postgresql", "mysql" or "sqlite".
// The `url` field must contain the connection string to your DB.
// Learn more about connection strings for your DB: https://pris.ly/connection-strings
datasource db {
  provider = "mysql"
  url = "***"
}

// Other examples for connection strings are:
// SQLite: url = "***"
// MySQL:  url = "***"
// You can also use environment variables to specify the connection string: https://pris.ly/prisma-schema#using-environment-variables

// By adding the `generator` block, you specify that you want to generate Prisma's DB client.
// The client is generated by runnning the `prisma generate` command and will be located in `node_modules/@prisma` and can be imported in your code as:
// import { Prisma Client } from '@prisma/client'
generator client {
  provider = "prisma-client-js"
}

// Next steps:
// 1. Add your DB connection string as the `url` of the `datasource` block
// 2. Run `prisma2 introspect` to get your data model into the schema (this will override this file and delete all comments!)
// 3. Run `prisma2 generate` to generate Prisma Client JS
// 4. Start using Prisma Client JS in your applicatio

enum Role {
  USER ADMIN
}

model User {
  id       String  @id @default(cuid())
  role     Role    @default(USER)
  email    String  @unique
  password String
  name     String?
}

model Material {
  id        String   @id @default(cuid())
  name      String
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  createdBy User
}

enum OrderStatus {
  NEW ONHOLD PRINTING PROCESSING SHIPPED CANCELED DONE
}

model Order {
  id         String      @id @default(cuid())
  number     Int         @unique
  customer   Customer?
  shippedAt  DateTime?
  totalPrice Float
  totalTax   Float
  note       String?
  items      OrderItem[]
  status     OrderStatus @default(NEW)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  createdBy  User
}

model OrderItem {
  id         String   @id @default(cuid())
  material   Material
  totalPrice Float
  totalTax   Float
  name       String?
  width      Float?
  height     Float?
  pieces     Int?
  urgency    Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  createdBy  User
}

model ImagePreviews {
  id        String    @id @default(cuid())
  name      String?
  url       String
  orderItem OrderItem
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  createdBy User
}

model Customer {
  id                      String    @id @default(cuid())
  name                    String?
  personName              String?
  phone                   String?
  email                   String?
  identificationNumber    String?
  taxIdentificationNumber String?
  allowedBankPayments     Boolean   @default(false)
  address                 Address[]
  note                    String?
  createdBy               User
  createdAt               DateTime  @default(now())
  updatedAt               DateTime  @updatedAt
}

model Address {
  id         String   @id @default(cuid())
  street     String?
  number     String?
  city       String?
  state      String?
  postNumber String?
  isPrimary  Boolean  @default(false)
  createdBy  User
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}